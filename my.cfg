newlines Auto

code_width = 90
input_tab_size 4

#
# indents
#

align_var_def_star_style 	= 0
align_var_def_amp_style  	= 0

indent_columns 			= 4
indent_with_tabs 		= 0
indent_brace_parent 		= false
indent_class_colon 		= true
#indent_continue			= 8


indent_class_colon 		= true
indent_constr_colon 		= true
indent_ctor_init 		= 4
indent_ctor_init_leading 	= 2
indent_switch_case		= 4
indent_access_spec      	= -2        # number
indent_class 			= true
indent_class_colon 		= true
indent_func_call_param  	= false
indent_func_def_param		= false
indent_func_class_param		= false
indent_func_ctor_var_param	= false
indent_var_def_cont		= true
#indent_var_def_blk		= 8
indent_member			= 8
indent_align_assign 		= false
indent_bool_paren		= true
indent_first_bool_expr		= false

#
# inter-symbol newlines
#

nl_enum_brace		= remove	# "enum {" vs "enum \n {"
nl_union_brace		= remove	# "union {" vs "union \n {"
nl_struct_brace		= remove	# "struct {" vs "struct \n {"
nl_do_brace 		= remove	# "do {" vs "do \n {"
nl_if_brace 		= remove	# "if () {" vs "if () \n {"
nl_for_brace 		= remove	# "for () {" vs "for () \n {"
nl_else_brace 		= remove	# "else {" vs "else \n {"
nl_while_brace 		= remove	# "while () {" vs "while () \n {"
nl_switch_brace 	= remove	# "switch () {" vs "switch () \n {"
nl_brace_while		= remove	# "} while" vs "} \n while" - cuddle while
nl_brace_else		= remove	# "} else" vs "} \n else" - cuddle else
#nl_func_var_def_blk	= 1
nl_fcall_brace		= ignore	# "list_for_each() {" vs "list_for_each()\n{"
nl_fdef_brace		= remove	# "int foo() {" vs "int foo()\n{"
nl_class_init_args 	= add

#
# Source code modifications
#

mod_paren_on_return	= ignore	# "return 1;" vs "return (1);"
mod_full_brace_if	= add   	# "if (a) a--;" vs "if (a) { a--; }"
mod_full_brace_for	= add   	# "for () a--;" vs "for () { a--; }"
mod_full_brace_do	= add   	# "do a--; while ();" vs "do { a--; } while ();"
mod_full_brace_while	= add   	# "while (a) a--;" vs "while (a) { a--; }"
mod_full_brace_nl	= 3		# don't remove if more than 3 newlines

#
# inter-character spacing options
#

# sp_return_paren		= force		# "return (1);" vs "return(1);"
sp_sizeof_paren			= remove	# "sizeof (int)" vs "sizeof(int)"
sp_before_sparen		= force		# "if (" vs "if("
sp_after_sparen			= force		# "if () {" vs "if (){"
sp_after_cast			= remove	# "(int) a" vs "(int)a"
sp_inside_braces		= add		# "{ 1 }" vs "{1}"
sp_inside_braces_struct		= add		# "{ 1 }" vs "{1}"
sp_inside_braces_enum		= add		# "{ 1 }" vs "{1}"
sp_assign			= add
sp_arith			= add
sp_bool			= add
sp_compare			= add
sp_assign			= add
sp_after_comma			= add
sp_paren_brace			= add
sp_sparen_brace 		= add 	
sp_fparen_brace 		= add	# "int foo() {" vs "int foo(){"
sp_func_def_paren		= remove	# "int foo (){" vs "int foo(){"
sp_func_call_paren		= remove	# "foo (" vs "foo("
sp_func_proto_paren		= remove	# "int foo ();" vs "int foo();"

sp_before_ptr_star  		= remove
sp_before_ptr_star_func		= remove
sp_between_ptr_star		= remove
sp_after_ptr_star		= add
sp_after_ptr_star_func 		= add

sp_before_byref			= remove
sp_before_byref_func 		= remove
sp_after_byref			= add
sp_after_byref_func		= add

pos_bool 			= trail
pos_class_colon 		= lead_break


